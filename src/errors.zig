pub fn errnoToString(code: c_int) []const u8 {
    switch (code) {
        1 => return "ENOENT",
        2 => return "ESRCH",
        3 => return "EINTR",
        4 => return "EIO",
        5 => return "ENXIO",
        6 => return "E2BIG",
        7 => return "ENOEXEC",
        8 => return "EBADF",
        9 => return "ECHILD",
        10 => return "EAGAIN",
        11 => return "ENOMEM",
        12 => return "EACCES",
        13 => return "EFAULT",
        14 => return "ENOTBLK",
        15 => return "EBUSY",
        16 => return "EEXIST",
        17 => return "EXDEV",
        18 => return "ENODEV",
        19 => return "ENOTDIR",
        20 => return "EISDIR",
        21 => return "EINVAL",
        22 => return "ENFILE",
        23 => return "EMFILE",
        24 => return "ENOTTY",
        25 => return "ETXTBSY",
        26 => return "EFBIG",
        27 => return "ENOSPC",
        28 => return "ESPIPE",
        29 => return "EROFS",
        30 => return "EMLINK",
        31 => return "EPIPE",
        32 => return "EDOM",
        33 => return "ERANGE",
        34 => return "EDEADLK",
        35 => return "ENAMETOOLONG",
        36 => return "ENOLCK",
        37 => return "ENOSYS",
        38 => return "ENOTEMPTY",
        39 => return "ELOOP",
        40 => return "ENOMSG",
        42 => return "EIDRM",
        43 => return "ECHRNG",
        44 => return "EL2NSYNC",
        45 => return "EL3HLT",
        46 => return "EL3RST",
        47 => return "ELNRNG",
        48 => return "EUNATCH",
        49 => return "ENOCSI",
        50 => return "EL2HLT",
        51 => return "EBADE",
        52 => return "EBADR",
        53 => return "EXFULL",
        54 => return "ENOANO",
        55 => return "EBADRQC",
        56 => return "EBADSLT",
        57 => return "EBFONT",
        59 => return "ENOSTR",
        60 => return "ENODATA",
        61 => return "ETIME",
        62 => return "ENOSR",
        63 => return "ENONET",
        64 => return "ENOPKG",
        65 => return "EREMOTE",
        66 => return "ENOLINK",
        67 => return "EADV",
        68 => return "ESRMNT",
        69 => return "ECOMM",
        70 => return "EPROTO",
        71 => return "EMULTIHOP",
        72 => return "EDOTDOT",
        73 => return "EBADMSG",
        74 => return "EOVERFLOW",
        75 => return "ENOTUNIQ",
        76 => return "EBADFD",
        77 => return "EREMCHG",
        78 => return "ELIBACC",
        79 => return "ELIBBAD",
        80 => return "ELIBSCN",
        81 => return "ELIBMAX",
        82 => return "ELIBEXEC",
        83 => return "EILSEQ",
        84 => return "ERESTART",
        85 => return "ESTRPIPE",
        86 => return "EUSERS",
        87 => return "ENOTSOCK",
        88 => return "EDESTADDRREQ",
        89 => return "EMSGSIZE",
        90 => return "EPROTOTYPE",
        91 => return "ENOPROTOOPT",
        92 => return "EPROTONOSUPPORT",
        93 => return "ESOCKTNOSUPPORT",
        94 => return "EOPNOTSUPP",
        95 => return "EPFNOSUPPORT",
        96 => return "EAFNOSUPPORT",
        97 => return "EADDRINUSE",
        98 => return "EADDRNOTAVAIL",
        99 => return "ENETDOWN",
        100 => return "ENETUNREACH",
        101 => return "ENETRESET",
        102 => return "ECONNABORTED",
        103 => return "ECONNRESET",
        104 => return "ENOBUFS",
        105 => return "EISCONN",
        106 => return "ENOTCONN",
        107 => return "ESHUTDOWN",
        108 => return "ETOOMANYREFS",
        109 => return "ETIMEDOUT",
        110 => return "ECONNREFUSED",
        111 => return "EHOSTDOWN",
        112 => return "EHOSTUNREACH",
        113 => return "EALREADY",
        114 => return "EINPROGRESS",
        115 => return "ESTALE",
        116 => return "EUCLEAN",
        117 => return "ENOTNAM",
        118 => return "ENAVAIL",
        119 => return "EISNAM",
        120 => return "EREMOTEIO",
        121 => return "EDQUOT",
        122 => return "ENOMEDIUM",
        123 => return "EMEDIUMTYPE",
        124 => return "ECANCELED",
        125 => return "ENOKEY",
        126 => return "EKEYEXPIRED",
        127 => return "EKEYREVOKED",
        128 => return "EKEYREJECTED",
        129 => return "EOWNERDEAD",
        130 => return "ENOTRECOVERABLE",
        131 => return "ERFKILL",
        132 => return "EHWPOISON",
        133 => return "EPERM",
        else => return "UNKNOWN",
    }
}

pub fn signalToString(sig: c_int) []const u8 {
    switch (sig) {
        1 => return "SIGHUP",
        2 => return "SIGINT",
        3 => return "SIGQUIT",
        4 => return "SIGILL",
        5 => return "SIGTRAP",
        6 => return "SIGABRT",
        7 => return "SIGBUS",
        8 => return "SIGFPE",
        9 => return "SIGKILL",
        10 => return "SIGUSR1",
        11 => return "SIGSEGV",
        12 => return "SIGUSR2",
        13 => return "SIGPIPE",
        14 => return "SIGALRM",
        15 => return "SIGTERM",
        16 => return "SIGSTKFLT",
        17 => return "SIGCHLD",
        18 => return "SIGCONT",
        19 => return "SIGSTOP",
        20 => return "SIGTSTP",
        21 => return "SIGTTIN",
        22 => return "SIGTTOU",
        23 => return "SIGURG",
        24 => return "SIGXCPU",
        25 => return "SIGXFSZ",
        26 => return "SIGVTALRM",
        27 => return "SIGPROF",
        28 => return "SIGWINCH",
        29 => return "SIGPOLL",
        30 => return "SIGPWR",
        31 => return "SIGSYS",

        else => return "UNKNOWN",
    }
}
